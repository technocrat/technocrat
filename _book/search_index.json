[
["the-subprime-mortgage-crisis-unfolds-in-early-2007-part-2.html", "5 The subprime mortgage crisis unfolds in early 2007, part 2 5.1 The fall of FICO 5.2 Restructuring the data 5.3 Principal component analysis 5.4 K-means clustering 5.5 Do the clusters predict loan performance?", " 5 The subprime mortgage crisis unfolds in early 2007, part 2 Keywords: refactoring, unsupervised learning, principal component analysis, k-means clustering, correspondence analysis, chi-squared test, contingency table, pivot, correlation table 5.1 The fall of FICO The problem with the conventional wisdom of long standing is that it loses sight of history. The prominence of FICO in home loan credit underwriting described in the Pinto Testimony had its origins in a different time (the early 1990s) and a different lending environment. Freddie Mac was in a good position to ensure that all other things were equal. It made only what came to be called “prime” loans, generally for no more than 80% of the value of the property, under more stringent limitations on the debt-to-income ratio of the borrower and many other criteria that it kept within a narrow range, and offered only a few varieties of loans. In the subprime market that emerged in the late 90s, all of those factors changed. Criteria that were narrow became broad, documentation was relaxed and a widespread assumption was that continually rising home values would preclude any problems. It’s not surprising that FICO lost its predictive power. 5.2 Restructuring the data Some of the testing of FICO as a useful metric involved subsetting the data. There were many more variables than the ones used, some of them categorical and some categorical coded as numeric. One potentially useful variable is location, because we know that real estate value are location sensitive. We have four location fields in the database, all derived from the postal zip code: The zip code itself, which is generally either much smaller or much larger than the real estate market, and also changes at the convenience of the postal service. See the discussion at [On the use of ZIP codes and ZIP code tabulation areas (ZCTAs) for the spatial analysis of epidemiological data]. The metropolitan area derived from the U.S. Census ZIP code tabulation area, but covers a larger area than most real estate markets Longitude and latitude dervived from the ZCTA’s, used for mapping As a compromise, I converted the 5-digit zip codes into 3-digit zip codes. In metropolitan areas, the 3-digit codes are the sizes comparable to how the multiple listing services divide the market. We’ll see if there is any value in this proxy measure of real estate market. It was time to reorganize the database into a more streamlined version, that captured the information on performance (relieving the 11-month constraint) and transformed the fields that needed to be treated as categorical, rather than continuous. It’s much more efficient to put this in a new SQL table than to keep in memory, especially since sampling will be involved. Here’s the revised data layout: MariaDB [dlf]&gt; describe loans; +———–+——–+——+—–+———+——-+ | Field | Type | Null | Key | Default | Extra | +———–+——–+——+—–+———+——-+ | row_names | text | YES | | NULL | | | ctapeno | double | YES | | NULL | | | deal | text | YES | | NULL | | | fico | double | YES | | NULL | | | dti | double | YES | | NULL | | | cltv | double | YES | | NULL | | | obal | double | YES | | NULL | | | orate | double | YES | | NULL | | | grade | text | YES | | NULL | | | dtype | text | YES | | NULL | | | fpd | text | YES | | NULL | | | ltype | text | YES | | NULL | | | otype | text | YES | | NULL | | | purpose | text | YES | | NULL | | | ptype | text | YES | | NULL | | | zip | text | YES | | NULL | | | metro | text | YES | | NULL | | | perf | text | YES | | NULL | | +———–+——–+——+—–+———+——-+ 18 rows in set (0.00 sec) Between the first two rows (record identifiers) and the last row (the performance category) are the 17 variables we have to predict the performance outcome. For the almost 100,000 records, that is 1.5 million pieces of information. Technically we are in 15-dimensional space, and we need a way of flattening the dimensionality to be able to question the data. 5.3 Principal component analysis The cumulative variance is 0.255, 0.494, 0.698, 0.856, 1 for this sample of 300. From the loadings chart on the right, we see that obal (the original amount of the loan) and orate (the original rate of interest) are negatively correlated, -0.451. The remaining continuous variables, fico, dti (debt-to-income ratio), cltv (the ratio of first and second loans to the value of the mortgaged property), have small correlations: The variables fico and cltv have some correlation (0.295), while fico and dti (-0.036) and dti and cltv (0.121) have low correlations. The variable orate, however, is clearly discrete, so we re-run without it and increase the size of the sample to 9,000. The variances are [1] 0.2888805 0.2652665 0.2472261 0.1986269 5.4 K-means clustering The following represents the unsupervised classification of the fico, cltv, obal, and dti of an approximately 10% sample from the loans dataset. Using the entire population, rather than a sample creates somewhat better defined clusters K-means clustering of all loans in loans database Consideration might be given to separately clustering high-balance loans. Other outliers, such as the zero FICO scores, can be safely ignored, as can be the anomalous loan with a 97% dti ratio. 5.4.1 Housekeeping Since PCA is a relatively expensive calculation for 100K records, I saved the result to and Rda file for reuse. Now, I’ll add it to the loans database as another categorical variable. Because I don’t run the MySQL server with rollback and to avoid a proliferation of names MariaDB [dlf]&gt; CREATE TABLE loans_bak AS SELECT * from loans; Query OK, 96147 rows affected (1.06 sec) Records: 96147 Duplicates: 0 Warnings: 0 The strategy is to create df loans w/all fields and cbind cs.k$clusters, renam “value” to kcluster and write back to loans, after dropping it dbWriteTable(con, &quot;loans&quot;, cs) Here’s the code (not run, to avoid churn) library(tidyverse) library(DBI) library(RMySQL) library(FactoMineR) drv &lt;- dbDriver(&quot;MySQL&quot;) con &lt;- dbConnect(drv, username=&quot;root&quot;, password=&quot;&quot;, dbname =&quot;dlf&quot;, host=&quot;localhost&quot;) res &lt;- dbGetQuery(con, &quot;SELECT * from loans_bak&quot;) cs &lt;- as.tibble(res) load(&quot;data/kmeans_loans.Rda&quot;) # brings in cs.k #check for missing values nrow(cs) == length(cs.k$cluster) # convert to data frame csk &lt;- as.tibble(cs.k$cluster) # rename the column csk &lt;- csk %&gt;% transmute(kcluster = value) # combine loans &lt;- bind_cols(cs,csk) # remove duplicate rownames column loans &lt;- loans[-1] # write back to SQL #dbWriteTable(con, &quot;loans&quot;, loans) # test #dbGetQuery(con, &quot;SELECT * from loans limit 25&quot;) 5.5 Do the clusters predict loan performance? We previously classified loans in the pool based on payment history into three categories: A: no more than 1 missed payment during the life of the loan B: more than 1 missed payment during the life of the loan but current in the most recent report C: delinquent at least three times as of the most recent three payment reports Do the clusters derived from the principal components of the numeric variables, obal, orate, dti and cltv have an association with the payment categories? If they do, we have the makings of a model; otherwise, we need to look at the other data available. 5.5.1 Correspondence analysis Principal component analysis and many other data tools work only on continuous data; for discrete (or categorical) values, we turn to contingency tables, where one variable is in the rows and the other in the columns, so this is sometimes called an r x c table. I’ll use three 10% samples to check if the results are consistent. The idea is to see if the porportion of results are independent. In formal terms, that will be the null hypothosis. The test statistic is the chi-square test of independence. I’ll use the conventional p-value of 0.05 as the cutoff; anything less than that means that I cannot reject the null hypothesis that the performance categories and the factors are independent. Here are the contingency tables: Table 5.1: Sample 1 contingency table of performance (row) by cluster (column) 1 2 3 A 32 23 22 B 2,434 4,548 842 C 315 675 109 Table 5.1: Sample 2 contingency table of performance (row) by cluster (column) 1 2 3 A 25 19 25 B 2,377 4,615 855 C 333 635 116 Table 5.1: Sample 3 contingency table of performance (row) by cluster (column) 1 2 3 A 30 18 18 B 2,431 4,591 802 C 306 680 124 and the chi-square tests are variable, depending on the particular sample. Pearson&#39;s Chi-squared test data: table(s1) X-squared = 40.568, df = 4, p-value = 3.303e-08 Pearson&#39;s Chi-squared test data: table(s2) X-squared = 52.09, df = 4, p-value = 1.321e-10 [1] “Sample 3 chi square test for independence” Pearson&#39;s Chi-squared test data: table(s3) X-squared = 39.528, df = 4, p-value = 5.419e-08 The chi square tests don’t allow us to conclude that the loan performance and PCA-dervived clusters are not independent. Put more plainly, the one seems to have nothing to do with the other. 5.5.2 What do other categorical contingency tables tell us? One of the available categorical variables is credit grade from the credit disclosure. Table 5.2: Contingency table of credit grade (row) by performance (column) A B C A 62 5,901 918 A- 30 1,693 273 A+ 64 8,080 1,149 AA 0 2 0 AP 585 60,263 8,548 AP+ 30 2,129 316 B 27 1,754 257 B- 0 1 0 B+ 18 1,358 191 C 38 2,139 320 D 0 1 0 ## Warning in chisq.test(table(cs)): Chi-squared approximation may be ## incorrect Pearson&#39;s Chi-squared test data: table(cs) X-squared = 45.353, df = 20, p-value = 0.0009879 The warning message Warning message: In chisq.test(table(s1)) : Chi-squared approximation may be incorrect can be easy to overlook, but it has an important message: Some of the grades are too few to occupy the expected value slots of the chi-squared distribution. We can restrict the selection to only the A- and AP categories easily enough. Table 5.3: Contingency table of credit grades A+ and AP (row) by performance (column) A B C A+ 64 8,080 1,149 AP 585 60,263 8,548 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 2.391, df = 2, p-value = 0.3025 These results would be encouraging, with a p-value greater than 0.05, allowing us to accept the alternative to independence (that those two credit grades, at least, have something to do with performance) but it fails to account for the other credit grades. Let’s try another categorical variabe, which transaction contained each loan, compared to that loan’s performance. Table 5.4: Contingency table of deal (row) by performance (column) A B C LBMLT 2006-1 92 6,988 984 LBMLT 2006-10 33 3,728 517 LBMLT 2006-11 51 5,166 747 LBMLT 2006-2 96 9,434 1,369 LBMLT 2006-3 57 5,505 812 LBMLT 2006-4 58 6,778 985 LBMLT 2006-5 63 6,657 949 LBMLT 2006-6 66 5,792 828 LBMLT 2006-7 61 5,677 803 LBMLT 2006-8 45 4,965 695 LBMLT 2006-9 56 5,380 803 LBMLT 2006-WL1 59 5,326 743 LBMLT 2006-WL2 62 5,836 818 LBMLT 2006-WL3 55 6,089 919 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 18.148, df = 26, p-value = 0.8703 On the other hand, the initial interest rates we have to consider as independent of performance. Table 5.5: Contingency table of interest rate (row) by performance (column) A B C 5 1 16 2 6 41 3,221 437 7 192 15,986 2,297 8 254 21,456 3,181 9 179 15,285 2,201 10 95 12,158 1,698 11 64 10,549 1,497 12 25 4,326 622 13 3 313 35 14 0 10 2 15 0 1 0 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 59.913, df = 20, p-value = 7.345e-06 The first payment date, indicating the time of origination, has an association with performance. Table 5.6: Contingency table of first payment date (row) by performance (column) A B C 2003-09-01 0 1 0 2004-06-01 0 1 0 2004-07-01 0 3 0 2004-11-01 0 2 0 2004-12-01 0 10 0 2005-01-01 0 3 0 2005-02-01 0 9 2 2005-03-01 0 15 2 2005-04-01 0 15 0 2005-05-01 0 32 4 2005-06-01 2 117 17 2005-07-01 12 620 78 2005-08-01 22 1,301 180 2005-09-01 16 976 123 2005-10-01 39 3,900 534 2005-11-01 73 7,923 1,156 2005-12-01 32 4,214 634 2006-01-01 64 4,913 690 2006-02-01 64 5,541 847 2006-03-01 52 4,864 709 2006-04-01 54 5,583 821 2006-05-01 61 6,504 894 2006-06-01 57 6,135 875 2006-07-01 57 5,609 817 2006-08-01 59 5,292 753 2006-09-01 44 4,670 660 2006-10-01 55 5,654 821 2006-11-01 47 4,403 622 2006-12-01 44 4,702 691 2007-01-01 0 309 42 ## ## Pearson&#39;s Chi-squared test ## ## data: table(cs) ## X-squared = 47.693, df = 58, p-value = 0.8308 The loan type is independent of performance. Table 5.7: Contingency table of loan type (row) by performance (column) A B C 2/28 LIBOR 231 23,661 3,392 2/38 LIBOR 269 19,531 2,740 2nd Fixed 66 13,230 1,803 3/27 LIBOR 32 3,077 468 3/37 LIBOR 37 3,127 447 5/25 LIBOR 39 3,656 592 5/35 LIBOR 31 2,300 347 6 Month LIBOR 5 42 4 Fixed 81 10,573 1,586 I/O 2/28 LIBOR 44 3,030 429 I/O 3/27 LIBOR 1 322 58 I/O 3/37 LIBOR 3 54 5 I/O 5/25 LIBOR 15 718 101 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 163.21, df = 24, p-value &lt; 2.2e-16 Occupancy type is independent of performance. Table 5.8: Contingency table of occupancy type (row) by performance (column) A B C NOO 69 9,708 1,364 OO 767 72,677 10,461 sechome 18 936 147 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 18.39, df = 4, p-value = 0.001035 Loan documentation type is independent of performance.. Table 5.9: Contingency table of documentation type (row) by performance (column) A B C Full 427 45,632 6,622 Limited 30 3,299 452 Stated 397 34,390 4,898 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 11.47, df = 4, p-value = 0.02176 Loan purpose (purchase, rate/term refinance/ cash-out refinance) is independent of performance. Table 5.10: Contingency table of loan purpose (row) by performance (column) A B C Purchase 456 53,930 7,668 Refi - Cashout 360 25,907 3,762 Refi - No Cashout 38 3,484 542 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 53.664, df = 4, p-value = 6.188e-11 Property type is independent of perforannce. Table 5.11: Contingency table of property type (row) by performance (column) A B C 2-4 Units 69 5,577 814 Condo 64 7,143 1,048 PUD 105 10,432 1,504 SFR 616 59,983 8,579 Townhouse 0 186 27 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 6.2699, df = 8, p-value = 0.617 The metropolitan region of the property is independent of performance. Table 5.12: Contingency table of metropolitan area (row) by performance (column) A B C Abilene, TX 0 15 2 Albany-Schenectady-Troy, 1 69 15 Albany, GA 0 10 3 Albuquerque, NM 4 75 9 Alexandria, LA 0 14 5 Allentown-Bethlehem-Easto 0 115 10 Altoona, PA 0 2 0 Amarillo, TX 0 36 2 Anchorage, AK 3 209 32 Anniston, AL 0 11 1 Appleton-Oshkosh-Neenah, 0 22 2 Asheville, NC 0 12 3 Athens, GA 0 13 2 Atlanta, GA 19 2,003 310 Auburn-Opelika, AL 0 4 2 Augusta-Aiken, GA-SC 0 30 5 Austin-San Marcos, TX 7 493 70 Bakersfield, CA 6 1,064 146 Bangor, ME 0 8 2 Barnstable-Yarmouth, MA 1 25 3 Baton Rouge, LA 0 98 11 Beaumont-Port Arthur, TX 0 52 5 Bellingham, WA 1 73 12 Benton Harbor, MI 0 73 11 Billings, MT 0 11 7 Binghamton, NY 0 9 3 Birmingham, AL 0 287 35 Bismarck, ND 0 8 2 Bloomington-Normal, IL 0 5 1 Bloomington, IN 0 8 2 Boise City, ID 0 53 10 Boston-Worcester-Lawrence 7 862 122 Brownsville-Harlingen-San 0 150 20 Bryan-College Station, TX 0 13 3 Buffalo-Niagara Falls, NY 0 35 8 Burlington, VT 0 10 6 Canton-Massillon, OH 1 21 9 Casper, WY 0 7 2 Cedar Rapids, IA 0 6 2 Champaign-Urbana, IL 0 7 1 Charleston-North Charlest 1 96 14 Charleston, WV 0 5 0 Charlotte-Gastonia-Rock H 1 300 47 Charlottesville, VA 0 9 1 Chattanooga, TN-GA 1 144 19 Cheyenne, WY 0 20 2 Chicago-Gary-Kenosha, IL- 41 4,191 584 Chico-Paradise, CA 2 80 14 Cincinnati-Hamilton, OH-K 0 70 10 Clarksville-Hopkinsville, 0 12 2 Cleveland-Akron, OH (C) 0 569 75 Colorado Springs, CO 0 215 46 Columbia, MO 0 12 1 Columbia, SC 0 86 12 Columbus, GA-AL 0 40 3 Columbus, OH 0 159 17 Corpus Christi, TX 0 85 10 Corvalis, OR 0 9 4 Cumberland, MD-WV 0 8 3 Dallas-Fort Worth, TX (C) 11 2,962 396 Danville, VA 0 8 0 Davenport-Moline-Rock Isl 0 23 3 Dayton-Springfield, OH 0 46 2 Daytona Beach, FL 3 172 25 Decatur, AL 0 6 1 Decatur, IL 0 5 0 Denver-Boulder-Greeley, C 14 1,108 176 Des Moines, IA 1 51 4 Detroit-Ann Arbor-Flint, 8 1,977 274 Dothan, AL 0 10 2 Dover, DE 0 14 2 Dubuque, IA 0 5 0 Duluth-Superior, MN-WI 0 18 6 Eau Claire, WI 0 7 0 El Paso, TX 3 312 39 Elkhart-Goshen, IN 0 11 2 Elmira, NY 0 4 0 Enid, OK 0 2 1 Erie, PA 0 8 1 Eugene-Springfield, OR 0 95 13 Evansville-Henderson, IN- 0 17 1 Fargo-Moorhead, ND-MN 0 5 1 Fayetteville-Springdale-R 0 28 2 Fayetteville, NC 3 145 26 Flagstaff, AZ-UT 0 10 4 Florence, AL 1 15 4 Florence, SC 1 12 3 Fort Collins-Loveland, CO 0 39 4 Fort Myers-Cape Coral, FL 0 323 62 Fort Pierce-Port St. Luci 0 231 33 Fort Smith, AR-OK 1 20 2 Fort Walton Beach, FL 0 17 5 Fort Wayne, IN 0 201 24 Fresno, CA 6 1,128 167 Gadsden, AL 0 17 2 Gainesville, FL 0 45 1 Glens Falls, NY 0 7 4 Goldsboro, NC 0 19 2 Grand Forks, ND-MN 0 2 0 Grand Junction, CO 0 57 8 Grand Rapids-Muskegon-Hol 1 236 57 Great Falls, MT 0 2 2 Green Bay, WI 0 4 1 Greensboro–Winston Salem 0 136 31 Greenville-Spartanburg-An 1 119 18 Greenville, NC 1 28 2 Harrisburg-Lebanon-Carlis 1 71 11 Hartford, CT 1 218 36 Hickory-Morganton-Lenoir, 0 13 3 Honolulu, HI 4 131 19 Houma, LA 0 5 0 Houston-Galveston-Brazori 12 2,333 337 Huntington-Ashland, WV-KY 0 16 2 Huntsville, AL 0 27 2 Indianapolis, IN 3 559 84 Iowa City, IA 0 3 1 Jackson, MI 0 45 4 Jackson, TN 0 55 13 Jacksonville, FL 1 278 32 Jacksonville, NC 0 21 1 Jamestown, NY 0 1 0 Janesville-Beloit, WI 1 15 2 Johnson City-Kingsport-Br 0 42 8 Johnstown, PA 0 3 4 Jonesboro, AR 0 13 1 Joplin, MO 0 31 4 Kalamazoo-Battle Creek, M 0 77 15 Kansas City, MO-KS 1 387 59 Killeen-Temple, TX 2 76 7 Knoxville, TN 3 257 31 Kokomo, IN 0 9 0 La Crosse, WI-MN 0 4 1 Lafayette, IN 0 4 0 Lafayette, LA 0 15 5 Lake Charles, LA 0 18 3 Lakeland-Winter Haven, FL 1 171 29 Lancaster, PA 1 46 7 Lansing-East Lansing, MI 1 131 18 Laredo, TX 0 88 15 Las Cruces, NM 0 21 3 Las Vegas, NV-AZ 3 517 74 Lawrence, KS 0 1 0 Lawton, OK 0 10 4 Lewiston-Auburn, ME 0 7 1 Lexington, KY 0 19 4 Lima, OH 0 19 1 Lincoln, NE 1 107 7 Little Rock-North Little 0 61 5 Longview-Marshall, TX 0 68 9 Los Angeles-Riverside-Ora 128 7,276 1,013 Louisville, KY-IN 0 154 15 Lubbock, TX 0 33 8 Lynchburg, VA 0 16 2 Macon, GA 0 64 12 Madison, WI 0 25 6 Mansfield, OH 1 23 3 McAllen-Edinburg-Mission, 1 213 36 Medford-Ashland, OR 2 37 6 Melbourne-Titusville-Palm 1 154 30 Memphis, TN-AR-MS 1 847 104 Merced, CA 5 568 74 Miami-Fort Lauderdale, FL 28 3,632 527 Milwaukee-Racine, WI (C) 4 488 78 Minneapolis-St. Paul, MN- 7 453 70 Missoula, MT 1 21 2 Mobile, AL 1 79 6 Modesto, CA 15 1,017 136 Monroe, LA 0 20 2 Montgomery, AL 0 41 6 Muncie, IN 0 38 3 Myrtle Beach, SC 0 22 3 Naples, FL 5 85 17 Nashville, TN 4 273 36 New London-Norwich, CT-RI 0 41 9 New Orleans, LA 0 66 7 New York, Northern New Je 73 3,603 528 Non-metro 49 5,871 859 Norfolk-Virginia Beach-Ne 1 203 32 Ocala, FL 0 79 8 Odessa-Midland, TX 0 46 7 Oklahoma City, OK 0 172 34 Omaha, NE-IA 0 302 52 Orlando, FL 8 1,010 147 Owensboro, KY 0 1 0 Panama City, FL 0 16 5 Parkersburg-Marietta, WV- 0 6 1 Pensacola, FL 0 32 7 Peoria-Pekin, IL 0 6 4 Philadelphia-Wilmington-A 20 1,566 215 Phoenix-Mesa, AZ 12 1,510 234 Pine Bluff, AR 0 14 0 Pittsburgh, PA 4 119 20 Pittsfield, MA 0 5 2 Pocatello, ID 0 8 1 Portland-Salem, OR-WA (C) 15 1,676 248 Portland, ME 0 19 2 Providence-Fall River-War 2 207 33 Provo-Orem, UT 1 49 7 Pueblo, CO 0 216 20 Punta Gorda, FL 0 40 11 Raleigh-Durham-Chapel Hil 1 251 53 Rapid City, SD 0 16 5 Reading, PA 0 66 6 Redding, CA 0 72 19 Reno, NV 0 63 9 Richland-Kennewick-Pasco, 0 58 10 Richmond-Petersburg, VA 4 138 22 Roanoke, VA 0 13 2 Rochester, MN 0 5 0 Rochester, NY 0 40 5 Rockford, IL 0 60 8 Rocky Mount, NC 0 56 7 Sacramento-Yolo, CA (C) 30 2,012 257 Saginaw-Bay City-Midland, 0 42 8 Salinas, CA 6 350 41 Salt Lake City-Ogden, UT 4 326 49 San Angelo, TX 0 18 0 San Antonio, TX 2 715 106 San Diego, CA 16 683 99 San Francisco-Oakland-San 98 5,358 784 San Luis Obispo-Atascader 0 49 8 Santa Barbara-Santa Maria 2 107 11 Santa Fe, NM 0 13 0 Sarasota-Bradenton, FL 0 284 35 Savannah, GA 0 42 5 Scranton–Wilkes-Barre–H 1 202 32 Seattle-Tacoma-Bremerton, 26 2,123 286 Sharon, PA 0 1 1 Sheboygan, WI 0 7 3 Sherman-Denison, TX 0 40 4 Shreveport-Bossier City, 0 84 11 Sioux City, IA-NE 0 13 3 Sioux Falls, SD 0 27 6 South Bend, IN 0 67 6 Spokane, WA 0 96 13 Springfield, IL 0 4 0 Springfield, MA 1 119 18 Springfield, MO 0 48 6 St. Cloud, MN 0 15 1 St. Joseph, MO 0 11 2 St. Louis, MO-IL 1 493 65 State College, PA 0 4 1 Steubenville-Weirton, OH- 0 4 0 Stockton-Lodi, CA 5 1,028 141 Sumter, SC 0 8 0 Syracuse, NY 1 35 8 Tallahassee, FL 0 23 5 Tampa-St. Petersburg-Clea 8 1,069 154 Terre Haute, IN 0 23 3 Texarkana, TX-Texarkana, 0 3 1 Toledo, OH 1 25 2 Topeka, KS 0 9 0 Tucson, AZ 1 192 34 Tulsa, OK 1 137 15 Tuscaloosa, AL 1 16 0 Tyler, TX 2 80 9 Utica-Rome, NY 0 10 4 Victoria, TX 0 18 1 Visalia-Tulare-Portervill 0 533 63 Waco, TX 1 52 10 Washington-Baltimore, DC- 59 4,481 614 Waterloo-Cedar Falls, IA 0 3 0 Wausau, WI 0 19 5 West Palm Beach-Boca Rato 3 640 98 Wheeling, WV-OH 0 2 1 Wichita Falls, TX 0 34 3 Wichita, KS 0 30 7 Williamsport, PA 0 5 0 Wilmington, NC 1 23 7 Yakima, WA 1 79 18 York, PA 0 66 7 Youngstown-Warren, OH 0 26 3 Yuba City, CA 1 148 23 Yuma, AZ 0 19 6 Pearson&#39;s Chi-squared test data: table(cs) X-squared = 709.71, df = 546, p-value = 2.677e-06 "]
]
